{
  "{\"sourceRoot\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"filename\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = require(\"path\");\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _socketController = _interopRequireDefault(require(\"./socketController\"));\n\nvar _events = _interopRequireDefault(require(\"./events\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint-disable no-undef */\n\n/* eslint-disable prettier/prettier */\nvar PORT = 4040 || null;\nvar app = (0, _express[\"default\"])();\napp.set(\"view engine\", \"pug\");\napp.set(\"views\", \"\".concat(__dirname, \"\\\\views\"));\napp.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_express[\"default\"][\"static\"]((0, _path.join)(__dirname, \"static\")));\napp.get(\"/\", openHome);\n\nfunction openHome(req, res) {\n  res.render(\"home\", {\n    events: JSON.stringify(_events[\"default\"])\n  });\n}\n\nvar handleListening = function handleListening() {\n  return console.log(\"\\u2714 Server running : http://localhost:\".concat(PORT));\n};\n\nvar server = app.listen(PORT, handleListening);\n\nvar io = _socket[\"default\"].listen(server); //누군가가 서버와 연결되면 sombody connected가 출력될것이다.\n//먼저 연결이 되야함. connection\n\n\nio.on(\"connection\", function (socket) {\n  return (0, _socketController[\"default\"])(socket);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJQT1JUIiwiYXBwIiwic2V0IiwiX19kaXJuYW1lIiwidXNlIiwiZXhwcmVzcyIsImdldCIsIm9wZW5Ib21lIiwicmVxIiwicmVzIiwicmVuZGVyIiwiZXZlbnRzIiwiSlNPTiIsInN0cmluZ2lmeSIsImhhbmRsZUxpc3RlbmluZyIsImNvbnNvbGUiLCJsb2ciLCJzZXJ2ZXIiLCJsaXN0ZW4iLCJpbyIsInNvY2tldElPIiwib24iLCJzb2NrZXQiXSwibWFwcGluZ3MiOiI7O0FBRUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFSQTs7QUFDQTtBQVNBLElBQU1BLElBQUksR0FBRyxRQUFRLElBQXJCO0FBQ0EsSUFBTUMsR0FBRyxHQUFHLDBCQUFaO0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixZQUFvQkMsU0FBcEI7QUFDQUYsR0FBRyxDQUFDRyxHQUFKLENBQVEsd0JBQU8sS0FBUCxDQUFSO0FBQ0FILEdBQUcsQ0FBQ0csR0FBSixDQUFRQyw4QkFBZSxnQkFBS0YsU0FBTCxFQUFnQixRQUFoQixDQUFmLENBQVI7QUFDQUYsR0FBRyxDQUFDSyxHQUFKLENBQVEsR0FBUixFQUFhQyxRQUFiOztBQUVBLFNBQVNBLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxHQUF2QixFQUE0QjtBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsTUFBWCxFQUFtQjtBQUFFQyxJQUFBQSxNQUFNLEVBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlRixrQkFBZjtBQUFWLEdBQW5CO0FBQ0Q7O0FBRUQsSUFBTUcsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQjtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixvREFBbURoQixJQUFuRCxFQUFOO0FBQUEsQ0FBeEI7O0FBQ0EsSUFBTWlCLE1BQU0sR0FBR2hCLEdBQUcsQ0FBQ2lCLE1BQUosQ0FBV2xCLElBQVgsRUFBaUJjLGVBQWpCLENBQWY7O0FBQ0EsSUFBTUssRUFBRSxHQUFHQyxtQkFBU0YsTUFBVCxDQUFnQkQsTUFBaEIsQ0FBWCxDLENBRUE7QUFDQTs7O0FBQ0FFLEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLFlBQU4sRUFBb0IsVUFBQ0MsTUFBRDtBQUFBLFNBQVksa0NBQWlCQSxNQUFqQixDQUFaO0FBQUEsQ0FBcEIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhY29yblxcRG9jdW1lbnRzXFxndWVzcy1NSU5FXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXHJcbi8qIGVzbGludC1kaXNhYmxlIHByZXR0aWVyL3ByZXR0aWVyICovXHJcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7IGpvaW4gfSBmcm9tIFwicGF0aFwiO1xyXG5cclxuaW1wb3J0IHNvY2tldElPIGZyb20gXCJzb2NrZXQuaW9cIjtcclxuaW1wb3J0IGxvZ2dlciBmcm9tIFwibW9yZ2FuXCI7XHJcbmltcG9ydCBzb2NrZXRDb250cm9sbGVyIGZyb20gXCIuL3NvY2tldENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IGV2ZW50cyBmcm9tIFwiLi9ldmVudHNcIjtcclxuXHJcbmNvbnN0IFBPUlQgPSA0MDQwIHx8IG51bGw7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnNldChcInZpZXcgZW5naW5lXCIsIFwicHVnXCIpO1xyXG5hcHAuc2V0KFwidmlld3NcIiwgYCR7X19kaXJuYW1lfVxcXFx2aWV3c2ApO1xyXG5hcHAudXNlKGxvZ2dlcihcImRldlwiKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoam9pbihfX2Rpcm5hbWUsIFwic3RhdGljXCIpKSk7XHJcbmFwcC5nZXQoXCIvXCIsIG9wZW5Ib21lKTtcclxuXHJcbmZ1bmN0aW9uIG9wZW5Ib21lKHJlcSwgcmVzKSB7XHJcbiAgcmVzLnJlbmRlcihcImhvbWVcIiwgeyBldmVudHM6IEpTT04uc3RyaW5naWZ5KGV2ZW50cykgfSk7XHJcbn1cclxuXHJcbmNvbnN0IGhhbmRsZUxpc3RlbmluZyA9ICgpID0+IGNvbnNvbGUubG9nKGDinJQgU2VydmVyIHJ1bm5pbmcgOiBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH1gKTtcclxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3RlbihQT1JULCBoYW5kbGVMaXN0ZW5pbmcpO1xyXG5jb25zdCBpbyA9IHNvY2tldElPLmxpc3RlbihzZXJ2ZXIpO1xyXG5cclxuLy/riITqtbDqsIDqsIAg7ISc67KE7JmAIOyXsOqysOuQmOuptCBzb21ib2R5IGNvbm5lY3RlZOqwgCDstpzroKXrkKDqsoPsnbTri6QuXHJcbi8v66i87KCAIOyXsOqysOydtCDrkJjslbztlaguIGNvbm5lY3Rpb25cclxuaW8ub24oXCJjb25uZWN0aW9uXCIsIChzb2NrZXQpID0+IHNvY2tldENvbnRyb2xsZXIoc29ja2V0KSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "PORT",
        "app",
        "set",
        "__dirname",
        "use",
        "express",
        "get",
        "openHome",
        "req",
        "res",
        "render",
        "events",
        "JSON",
        "stringify",
        "handleListening",
        "console",
        "log",
        "server",
        "listen",
        "io",
        "socketIO",
        "on",
        "socket"
      ],
      "mappings": ";;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AARA;;AACA;AASA,IAAMA,IAAI,GAAG,QAAQ,IAArB;AACA,IAAMC,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,YAAoBC,SAApB;AACAF,GAAG,CAACG,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAH,GAAG,CAACG,GAAJ,CAAQC,8BAAe,gBAAKF,SAAL,EAAgB,QAAhB,CAAf,CAAR;AACAF,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaC,QAAb;;AAEA,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAmB;AAAEC,IAAAA,MAAM,EAAEC,IAAI,CAACC,SAAL,CAAeF,kBAAf;AAAV,GAAnB;AACD;;AAED,IAAMG,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAMC,OAAO,CAACC,GAAR,oDAAmDhB,IAAnD,EAAN;AAAA,CAAxB;;AACA,IAAMiB,MAAM,GAAGhB,GAAG,CAACiB,MAAJ,CAAWlB,IAAX,EAAiBc,eAAjB,CAAf;;AACA,IAAMK,EAAE,GAAGC,mBAASF,MAAT,CAAgBD,MAAhB,CAAX,C,CAEA;AACA;;;AACAE,EAAE,CAACE,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD;AAAA,SAAY,kCAAiBA,MAAjB,CAAZ;AAAA,CAApB",
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
      "sourcesContent": [
        "/* eslint-disable no-undef */\r\n/* eslint-disable prettier/prettier */\r\nimport express from \"express\";\r\nimport { join } from \"path\";\r\n\r\nimport socketIO from \"socket.io\";\r\nimport logger from \"morgan\";\r\nimport socketController from \"./socketController\";\r\nimport events from \"./events\";\r\n\r\nconst PORT = 4040 || null;\r\nconst app = express();\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", `${__dirname}\\\\views`);\r\napp.use(logger(\"dev\"));\r\napp.use(express.static(join(__dirname, \"static\")));\r\napp.get(\"/\", openHome);\r\n\r\nfunction openHome(req, res) {\r\n  res.render(\"home\", { events: JSON.stringify(events) });\r\n}\r\n\r\nconst handleListening = () => console.log(`✔ Server running : http://localhost:${PORT}`);\r\nconst server = app.listen(PORT, handleListening);\r\nconst io = socketIO.listen(server);\r\n\r\n//누군가가 서버와 연결되면 sombody connected가 출력될것이다.\r\n//먼저 연결이 되야함. connection\r\nio.on(\"connection\", (socket) => socketController(socket));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590366326949
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"filename\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\src\\\\socketController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\socketController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\socketController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\socketController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
        "sourceFileName": "socketController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _events = _interopRequireDefault(require(\"./events\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//이벤트를 듣는 컨트롤러.\n//이벤트를 수신하고 행동을 취한다.\nvar socketController = function socketController(socket) {\n  var broadcast = function broadcast(event, data) {\n    socket.broadcast.emit(event, data); //이벤트 , 전달된 데이터.\n  };\n\n  socket.on(_events[\"default\"].sendMsg, function (_ref) {\n    var message = _ref.message;\n    broadcast(_events[\"default\"].newMsg, {\n      message: message,\n      nickname: socket.nickname\n    });\n  });\n  socket.on(_events[\"default\"].setNickname, function (_ref2) {\n    var nickname = _ref2.nickname;\n    socket.nickname = nickname;\n    broadcast(_events[\"default\"].newUser, {\n      nickname: nickname\n    });\n  });\n  socket.on(_events[\"default\"].disconnect, function () {\n    broadcast(_events[\"default\"].disconnected, {\n      nickname: socket.nickname\n    });\n  });\n  socket.on(_events[\"default\"].sendMsg, function (_ref3) {\n    var message = _ref3.message;\n    broadcast(_events[\"default\"].newMsg, {\n      message: message,\n      nickname: socket.nickname\n    });\n  });\n  socket.on(_events[\"default\"].beginPath, function (_ref4) {\n    var x = _ref4.x,\n        y = _ref4.y;\n    return broadcast(_events[\"default\"].beganPath, {\n      x: x,\n      y: y\n    });\n  });\n  socket.on(_events[\"default\"].strokePath, function (_ref5) {\n    var x = _ref5.x,\n        y = _ref5.y,\n        color = _ref5.color;\n    broadcast(_events[\"default\"].strokedPath, {\n      x: x,\n      y: y,\n      color: color\n    });\n  }); //fill이벤트를 받으면 filled이벤트를 브로드캐스트할거야.\n\n  socket.on(_events[\"default\"].fill, function (_ref6) {\n    var color = _ref6.color;\n    broadcast(_events[\"default\"].filled, {\n      color: color\n    });\n  }); //   socket.on(\"newMessage\", (message) => {\n  //     socket.broadcast.emit(\"messageNotif\", {\n  //       message,\n  //       nickname: socket.nickname || \"Anon\",\n  //     }); //메세지를 보내면 닉네임과 같이 보냄.\n  //   });\n  //   socket.on(\"setNickname\", ({ nickname }) => {\n  //     //setNickname이라는 이벤트로 닉네임을 받으면 객체에 nickname을 할당한다.\n  //     socket.nickname = nickname; //소켓은 그냥 객체임. socket.potato = 5이런것도가능함.\n  //   });\n};\n\nvar _default = socketController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvY2tldENvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsic29ja2V0Q29udHJvbGxlciIsInNvY2tldCIsImJyb2FkY2FzdCIsImV2ZW50IiwiZGF0YSIsImVtaXQiLCJvbiIsImV2ZW50cyIsInNlbmRNc2ciLCJtZXNzYWdlIiwibmV3TXNnIiwibmlja25hbWUiLCJzZXROaWNrbmFtZSIsIm5ld1VzZXIiLCJkaXNjb25uZWN0IiwiZGlzY29ubmVjdGVkIiwiYmVnaW5QYXRoIiwieCIsInkiLCJiZWdhblBhdGgiLCJzdHJva2VQYXRoIiwiY29sb3IiLCJzdHJva2VkUGF0aCIsImZpbGwiLCJmaWxsZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7OztBQUhBO0FBQ0E7QUFHQSxJQUFNQSxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUNDLE1BQUQsRUFBWTtBQUNuQyxNQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBaUI7QUFDakNILElBQUFBLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkcsSUFBakIsQ0FBc0JGLEtBQXRCLEVBQTZCQyxJQUE3QixFQURpQyxDQUNHO0FBQ3JDLEdBRkQ7O0FBSUFILEVBQUFBLE1BQU0sQ0FBQ0ssRUFBUCxDQUFVQyxtQkFBT0MsT0FBakIsRUFBMEIsZ0JBQWlCO0FBQUEsUUFBZEMsT0FBYyxRQUFkQSxPQUFjO0FBQ3pDUCxJQUFBQSxTQUFTLENBQUNLLG1CQUFPRyxNQUFSLEVBQWdCO0FBQUVELE1BQUFBLE9BQU8sRUFBUEEsT0FBRjtBQUFXRSxNQUFBQSxRQUFRLEVBQUVWLE1BQU0sQ0FBQ1U7QUFBNUIsS0FBaEIsQ0FBVDtBQUNELEdBRkQ7QUFHQVYsRUFBQUEsTUFBTSxDQUFDSyxFQUFQLENBQVVDLG1CQUFPSyxXQUFqQixFQUE4QixpQkFBa0I7QUFBQSxRQUFmRCxRQUFlLFNBQWZBLFFBQWU7QUFDOUNWLElBQUFBLE1BQU0sQ0FBQ1UsUUFBUCxHQUFrQkEsUUFBbEI7QUFDQVQsSUFBQUEsU0FBUyxDQUFDSyxtQkFBT00sT0FBUixFQUFpQjtBQUFFRixNQUFBQSxRQUFRLEVBQVJBO0FBQUYsS0FBakIsQ0FBVDtBQUNELEdBSEQ7QUFJQVYsRUFBQUEsTUFBTSxDQUFDSyxFQUFQLENBQVVDLG1CQUFPTyxVQUFqQixFQUE2QixZQUFNO0FBQ2pDWixJQUFBQSxTQUFTLENBQUNLLG1CQUFPUSxZQUFSLEVBQXNCO0FBQUVKLE1BQUFBLFFBQVEsRUFBRVYsTUFBTSxDQUFDVTtBQUFuQixLQUF0QixDQUFUO0FBQ0QsR0FGRDtBQUdBVixFQUFBQSxNQUFNLENBQUNLLEVBQVAsQ0FBVUMsbUJBQU9DLE9BQWpCLEVBQTBCLGlCQUFpQjtBQUFBLFFBQWRDLE9BQWMsU0FBZEEsT0FBYztBQUN6Q1AsSUFBQUEsU0FBUyxDQUFDSyxtQkFBT0csTUFBUixFQUFnQjtBQUFFRCxNQUFBQSxPQUFPLEVBQVBBLE9BQUY7QUFBV0UsTUFBQUEsUUFBUSxFQUFFVixNQUFNLENBQUNVO0FBQTVCLEtBQWhCLENBQVQ7QUFDRCxHQUZEO0FBSUFWLEVBQUFBLE1BQU0sQ0FBQ0ssRUFBUCxDQUFVQyxtQkFBT1MsU0FBakIsRUFBNEI7QUFBQSxRQUFHQyxDQUFILFNBQUdBLENBQUg7QUFBQSxRQUFNQyxDQUFOLFNBQU1BLENBQU47QUFBQSxXQUMxQmhCLFNBQVMsQ0FBQ0ssbUJBQU9ZLFNBQVIsRUFBbUI7QUFBRUYsTUFBQUEsQ0FBQyxFQUFEQSxDQUFGO0FBQUtDLE1BQUFBLENBQUMsRUFBREE7QUFBTCxLQUFuQixDQURpQjtBQUFBLEdBQTVCO0FBSUFqQixFQUFBQSxNQUFNLENBQUNLLEVBQVAsQ0FBVUMsbUJBQU9hLFVBQWpCLEVBQTZCLGlCQUFxQjtBQUFBLFFBQWxCSCxDQUFrQixTQUFsQkEsQ0FBa0I7QUFBQSxRQUFmQyxDQUFlLFNBQWZBLENBQWU7QUFBQSxRQUFaRyxLQUFZLFNBQVpBLEtBQVk7QUFDaERuQixJQUFBQSxTQUFTLENBQUNLLG1CQUFPZSxXQUFSLEVBQXFCO0FBQUVMLE1BQUFBLENBQUMsRUFBREEsQ0FBRjtBQUFLQyxNQUFBQSxDQUFDLEVBQURBLENBQUw7QUFBUUcsTUFBQUEsS0FBSyxFQUFMQTtBQUFSLEtBQXJCLENBQVQ7QUFDRCxHQUZELEVBdkJtQyxDQTJCbkM7O0FBQ0FwQixFQUFBQSxNQUFNLENBQUNLLEVBQVAsQ0FBVUMsbUJBQU9nQixJQUFqQixFQUF1QixpQkFBZTtBQUFBLFFBQVpGLEtBQVksU0FBWkEsS0FBWTtBQUNwQ25CLElBQUFBLFNBQVMsQ0FBQ0ssbUJBQU9pQixNQUFSLEVBQWdCO0FBQUVILE1BQUFBLEtBQUssRUFBTEE7QUFBRixLQUFoQixDQUFUO0FBQ0QsR0FGRCxFQTVCbUMsQ0ErQm5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0QsQ0F6Q0Q7O2VBMENlckIsZ0IiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhY29yblxcRG9jdW1lbnRzXFxndWVzcy1NSU5FXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8v7J2067Kk7Yq466W8IOuTo+uKlCDsu6jtirjroaTrn6wuXHJcbi8v7J2067Kk7Yq466W8IOyImOyLoO2VmOqzoCDtlonrj5nsnYQg7Leo7ZWc64ukLlxyXG5cclxuaW1wb3J0IGV2ZW50cyBmcm9tIFwiLi9ldmVudHNcIjtcclxuY29uc3Qgc29ja2V0Q29udHJvbGxlciA9IChzb2NrZXQpID0+IHtcclxuICBjb25zdCBicm9hZGNhc3QgPSAoZXZlbnQsIGRhdGEpID0+IHtcclxuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdChldmVudCwgZGF0YSk7IC8v7J2067Kk7Yq4ICwg7KCE64us65CcIOuNsOydtO2EsC5cclxuICB9O1xyXG5cclxuICBzb2NrZXQub24oZXZlbnRzLnNlbmRNc2csICh7IG1lc3NhZ2UgfSkgPT4ge1xyXG4gICAgYnJvYWRjYXN0KGV2ZW50cy5uZXdNc2csIHsgbWVzc2FnZSwgbmlja25hbWU6IHNvY2tldC5uaWNrbmFtZSB9KTtcclxuICB9KTtcclxuICBzb2NrZXQub24oZXZlbnRzLnNldE5pY2tuYW1lLCAoeyBuaWNrbmFtZSB9KSA9PiB7XHJcbiAgICBzb2NrZXQubmlja25hbWUgPSBuaWNrbmFtZTtcclxuICAgIGJyb2FkY2FzdChldmVudHMubmV3VXNlciwgeyBuaWNrbmFtZSB9KTtcclxuICB9KTtcclxuICBzb2NrZXQub24oZXZlbnRzLmRpc2Nvbm5lY3QsICgpID0+IHtcclxuICAgIGJyb2FkY2FzdChldmVudHMuZGlzY29ubmVjdGVkLCB7IG5pY2tuYW1lOiBzb2NrZXQubmlja25hbWUgfSk7XHJcbiAgfSk7XHJcbiAgc29ja2V0Lm9uKGV2ZW50cy5zZW5kTXNnLCAoeyBtZXNzYWdlIH0pID0+IHtcclxuICAgIGJyb2FkY2FzdChldmVudHMubmV3TXNnLCB7IG1lc3NhZ2UsIG5pY2tuYW1lOiBzb2NrZXQubmlja25hbWUgfSk7XHJcbiAgfSk7XHJcblxyXG4gIHNvY2tldC5vbihldmVudHMuYmVnaW5QYXRoLCAoeyB4LCB5IH0pID0+XHJcbiAgICBicm9hZGNhc3QoZXZlbnRzLmJlZ2FuUGF0aCwgeyB4LCB5IH0pXHJcbiAgKTtcclxuXHJcbiAgc29ja2V0Lm9uKGV2ZW50cy5zdHJva2VQYXRoLCAoeyB4LCB5LCBjb2xvciB9KSA9PiB7XHJcbiAgICBicm9hZGNhc3QoZXZlbnRzLnN0cm9rZWRQYXRoLCB7IHgsIHksIGNvbG9yIH0pO1xyXG4gIH0pO1xyXG5cclxuICAvL2ZpbGzsnbTrsqTtirjrpbwg67Cb7Jy866m0IGZpbGxlZOydtOuypO2KuOulvCDruIzroZzrk5zsupDsiqTtirjtlaDqsbDslbwuXHJcbiAgc29ja2V0Lm9uKGV2ZW50cy5maWxsLCAoeyBjb2xvciB9KSA9PiB7XHJcbiAgICBicm9hZGNhc3QoZXZlbnRzLmZpbGxlZCwgeyBjb2xvciB9KTtcclxuICB9KTtcclxuICAvLyAgIHNvY2tldC5vbihcIm5ld01lc3NhZ2VcIiwgKG1lc3NhZ2UpID0+IHtcclxuICAvLyAgICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KFwibWVzc2FnZU5vdGlmXCIsIHtcclxuICAvLyAgICAgICBtZXNzYWdlLFxyXG4gIC8vICAgICAgIG5pY2tuYW1lOiBzb2NrZXQubmlja25hbWUgfHwgXCJBbm9uXCIsXHJcbiAgLy8gICAgIH0pOyAvL+uplOyEuOyngOulvCDrs7TrgrTrqbQg64uJ64Sk7J6E6rO8IOqwmeydtCDrs7Trg4QuXHJcbiAgLy8gICB9KTtcclxuICAvLyAgIHNvY2tldC5vbihcInNldE5pY2tuYW1lXCIsICh7IG5pY2tuYW1lIH0pID0+IHtcclxuICAvLyAgICAgLy9zZXROaWNrbmFtZeydtOudvOuKlCDsnbTrsqTtirjroZwg64uJ64Sk7J6E7J2EIOuwm+ycvOuptCDqsJ3ssrTsl5Agbmlja25hbWXsnYQg7ZWg64u57ZWc64ukLlxyXG4gIC8vICAgICBzb2NrZXQubmlja25hbWUgPSBuaWNrbmFtZTsgLy/shozsvJPsnYAg6re464OlIOqwneyytOyehC4gc29ja2V0LnBvdGF0byA9IDXsnbTrn7DqsoPrj4TqsIDriqXtlaguXHJcbiAgLy8gICB9KTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgc29ja2V0Q29udHJvbGxlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "socketController.js"
      ],
      "names": [
        "socketController",
        "socket",
        "broadcast",
        "event",
        "data",
        "emit",
        "on",
        "events",
        "sendMsg",
        "message",
        "newMsg",
        "nickname",
        "setNickname",
        "newUser",
        "disconnect",
        "disconnected",
        "beginPath",
        "x",
        "y",
        "beganPath",
        "strokePath",
        "color",
        "strokedPath",
        "fill",
        "filled"
      ],
      "mappings": ";;;;;;;AAGA;;;;AAHA;AACA;AAGA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACnC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACjCH,IAAAA,MAAM,CAACC,SAAP,CAAiBG,IAAjB,CAAsBF,KAAtB,EAA6BC,IAA7B,EADiC,CACG;AACrC,GAFD;;AAIAH,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOC,OAAjB,EAA0B,gBAAiB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACzCP,IAAAA,SAAS,CAACK,mBAAOG,MAAR,EAAgB;AAAED,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,QAAQ,EAAEV,MAAM,CAACU;AAA5B,KAAhB,CAAT;AACD,GAFD;AAGAV,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOK,WAAjB,EAA8B,iBAAkB;AAAA,QAAfD,QAAe,SAAfA,QAAe;AAC9CV,IAAAA,MAAM,CAACU,QAAP,GAAkBA,QAAlB;AACAT,IAAAA,SAAS,CAACK,mBAAOM,OAAR,EAAiB;AAAEF,MAAAA,QAAQ,EAARA;AAAF,KAAjB,CAAT;AACD,GAHD;AAIAV,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOO,UAAjB,EAA6B,YAAM;AACjCZ,IAAAA,SAAS,CAACK,mBAAOQ,YAAR,EAAsB;AAAEJ,MAAAA,QAAQ,EAAEV,MAAM,CAACU;AAAnB,KAAtB,CAAT;AACD,GAFD;AAGAV,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOC,OAAjB,EAA0B,iBAAiB;AAAA,QAAdC,OAAc,SAAdA,OAAc;AACzCP,IAAAA,SAAS,CAACK,mBAAOG,MAAR,EAAgB;AAAED,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,QAAQ,EAAEV,MAAM,CAACU;AAA5B,KAAhB,CAAT;AACD,GAFD;AAIAV,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOS,SAAjB,EAA4B;AAAA,QAAGC,CAAH,SAAGA,CAAH;AAAA,QAAMC,CAAN,SAAMA,CAAN;AAAA,WAC1BhB,SAAS,CAACK,mBAAOY,SAAR,EAAmB;AAAEF,MAAAA,CAAC,EAADA,CAAF;AAAKC,MAAAA,CAAC,EAADA;AAAL,KAAnB,CADiB;AAAA,GAA5B;AAIAjB,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOa,UAAjB,EAA6B,iBAAqB;AAAA,QAAlBH,CAAkB,SAAlBA,CAAkB;AAAA,QAAfC,CAAe,SAAfA,CAAe;AAAA,QAAZG,KAAY,SAAZA,KAAY;AAChDnB,IAAAA,SAAS,CAACK,mBAAOe,WAAR,EAAqB;AAAEL,MAAAA,CAAC,EAADA,CAAF;AAAKC,MAAAA,CAAC,EAADA,CAAL;AAAQG,MAAAA,KAAK,EAALA;AAAR,KAArB,CAAT;AACD,GAFD,EAvBmC,CA2BnC;;AACApB,EAAAA,MAAM,CAACK,EAAP,CAAUC,mBAAOgB,IAAjB,EAAuB,iBAAe;AAAA,QAAZF,KAAY,SAAZA,KAAY;AACpCnB,IAAAA,SAAS,CAACK,mBAAOiB,MAAR,EAAgB;AAAEH,MAAAA,KAAK,EAALA;AAAF,KAAhB,CAAT;AACD,GAFD,EA5BmC,CA+BnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAzCD;;eA0CerB,gB",
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
      "sourcesContent": [
        "//이벤트를 듣는 컨트롤러.\r\n//이벤트를 수신하고 행동을 취한다.\r\n\r\nimport events from \"./events\";\r\nconst socketController = (socket) => {\r\n  const broadcast = (event, data) => {\r\n    socket.broadcast.emit(event, data); //이벤트 , 전달된 데이터.\r\n  };\r\n\r\n  socket.on(events.sendMsg, ({ message }) => {\r\n    broadcast(events.newMsg, { message, nickname: socket.nickname });\r\n  });\r\n  socket.on(events.setNickname, ({ nickname }) => {\r\n    socket.nickname = nickname;\r\n    broadcast(events.newUser, { nickname });\r\n  });\r\n  socket.on(events.disconnect, () => {\r\n    broadcast(events.disconnected, { nickname: socket.nickname });\r\n  });\r\n  socket.on(events.sendMsg, ({ message }) => {\r\n    broadcast(events.newMsg, { message, nickname: socket.nickname });\r\n  });\r\n\r\n  socket.on(events.beginPath, ({ x, y }) =>\r\n    broadcast(events.beganPath, { x, y })\r\n  );\r\n\r\n  socket.on(events.strokePath, ({ x, y, color }) => {\r\n    broadcast(events.strokedPath, { x, y, color });\r\n  });\r\n\r\n  //fill이벤트를 받으면 filled이벤트를 브로드캐스트할거야.\r\n  socket.on(events.fill, ({ color }) => {\r\n    broadcast(events.filled, { color });\r\n  });\r\n  //   socket.on(\"newMessage\", (message) => {\r\n  //     socket.broadcast.emit(\"messageNotif\", {\r\n  //       message,\r\n  //       nickname: socket.nickname || \"Anon\",\r\n  //     }); //메세지를 보내면 닉네임과 같이 보냄.\r\n  //   });\r\n  //   socket.on(\"setNickname\", ({ nickname }) => {\r\n  //     //setNickname이라는 이벤트로 닉네임을 받으면 객체에 nickname을 할당한다.\r\n  //     socket.nickname = nickname; //소켓은 그냥 객체임. socket.potato = 5이런것도가능함.\r\n  //   });\r\n};\r\nexport default socketController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590551607659
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"filename\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\src\\\\events.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\events.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\events.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\events.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
        "sourceFileName": "events.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar events = {\n  setNickname: \"setNickname\",\n  newUser: \"newUser\",\n  disconnect: \"disconnect\",\n  disconnected: \"disconnected\",\n  sendMsg: \"sendMsg\",\n  newMsg: \"newMsg\",\n  beginPath: \"beginPath\",\n  strokePath: \"strokePath\",\n  beganPath: \"beganPath\",\n  strokedPath: \"strokedPath\",\n  fill: \"fill\",\n  filled: \"filled\"\n};\nvar _default = events;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5qcyJdLCJuYW1lcyI6WyJldmVudHMiLCJzZXROaWNrbmFtZSIsIm5ld1VzZXIiLCJkaXNjb25uZWN0IiwiZGlzY29ubmVjdGVkIiwic2VuZE1zZyIsIm5ld01zZyIsImJlZ2luUGF0aCIsInN0cm9rZVBhdGgiLCJiZWdhblBhdGgiLCJzdHJva2VkUGF0aCIsImZpbGwiLCJmaWxsZWQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxXQUFXLEVBQUUsYUFEQTtBQUViQyxFQUFBQSxPQUFPLEVBQUUsU0FGSTtBQUdiQyxFQUFBQSxVQUFVLEVBQUUsWUFIQztBQUliQyxFQUFBQSxZQUFZLEVBQUUsY0FKRDtBQUtiQyxFQUFBQSxPQUFPLEVBQUUsU0FMSTtBQU1iQyxFQUFBQSxNQUFNLEVBQUUsUUFOSztBQU9iQyxFQUFBQSxTQUFTLEVBQUUsV0FQRTtBQVFiQyxFQUFBQSxVQUFVLEVBQUUsWUFSQztBQVNiQyxFQUFBQSxTQUFTLEVBQUUsV0FURTtBQVViQyxFQUFBQSxXQUFXLEVBQUUsYUFWQTtBQVdiQyxFQUFBQSxJQUFJLEVBQUUsTUFYTztBQVliQyxFQUFBQSxNQUFNLEVBQUU7QUFaSyxDQUFmO2VBY2VaLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhY29yblxcRG9jdW1lbnRzXFxndWVzcy1NSU5FXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV2ZW50cyA9IHtcclxuICBzZXROaWNrbmFtZTogXCJzZXROaWNrbmFtZVwiLFxyXG4gIG5ld1VzZXI6IFwibmV3VXNlclwiLFxyXG4gIGRpc2Nvbm5lY3Q6IFwiZGlzY29ubmVjdFwiLFxyXG4gIGRpc2Nvbm5lY3RlZDogXCJkaXNjb25uZWN0ZWRcIixcclxuICBzZW5kTXNnOiBcInNlbmRNc2dcIixcclxuICBuZXdNc2c6IFwibmV3TXNnXCIsXHJcbiAgYmVnaW5QYXRoOiBcImJlZ2luUGF0aFwiLFxyXG4gIHN0cm9rZVBhdGg6IFwic3Ryb2tlUGF0aFwiLFxyXG4gIGJlZ2FuUGF0aDogXCJiZWdhblBhdGhcIixcclxuICBzdHJva2VkUGF0aDogXCJzdHJva2VkUGF0aFwiLFxyXG4gIGZpbGw6IFwiZmlsbFwiLFxyXG4gIGZpbGxlZDogXCJmaWxsZWRcIixcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgZXZlbnRzO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "events.js"
      ],
      "names": [
        "events",
        "setNickname",
        "newUser",
        "disconnect",
        "disconnected",
        "sendMsg",
        "newMsg",
        "beginPath",
        "strokePath",
        "beganPath",
        "strokedPath",
        "fill",
        "filled"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE,aADA;AAEbC,EAAAA,OAAO,EAAE,SAFI;AAGbC,EAAAA,UAAU,EAAE,YAHC;AAIbC,EAAAA,YAAY,EAAE,cAJD;AAKbC,EAAAA,OAAO,EAAE,SALI;AAMbC,EAAAA,MAAM,EAAE,QANK;AAObC,EAAAA,SAAS,EAAE,WAPE;AAQbC,EAAAA,UAAU,EAAE,YARC;AASbC,EAAAA,SAAS,EAAE,WATE;AAUbC,EAAAA,WAAW,EAAE,aAVA;AAWbC,EAAAA,IAAI,EAAE,MAXO;AAYbC,EAAAA,MAAM,EAAE;AAZK,CAAf;eAceZ,M",
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\src\\",
      "sourcesContent": [
        "const events = {\r\n  setNickname: \"setNickname\",\r\n  newUser: \"newUser\",\r\n  disconnect: \"disconnect\",\r\n  disconnected: \"disconnected\",\r\n  sendMsg: \"sendMsg\",\r\n  newMsg: \"newMsg\",\r\n  beginPath: \"beginPath\",\r\n  strokePath: \"strokePath\",\r\n  beganPath: \"beganPath\",\r\n  strokedPath: \"strokedPath\",\r\n  fill: \"fill\",\r\n  filled: \"filled\",\r\n};\r\nexport default events;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590549146713
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"filename\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\acorn\\Documents\\guess-MINE",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\acorn\\Documents\\guess-MINE\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\acorn\\Documents\\guess-MINE\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpBrowserify = _interopRequireDefault(require(\"gulp-browserify\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar paths = {\n  styles: {\n    src: \"assets/scss/styles.scss\",\n    dest: \"src/static/styles\",\n    watch: \"assets/scss/**/*.scss\"\n  },\n  js: {\n    src: \"assets/js/main.js\",\n    dest: \"src/static/js\",\n    watch: \"assets/js/**/*.js\"\n  }\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"src/static\"]);\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpSass[\"default\"])()).pipe((0, _gulpAutoprefixer[\"default\"])({\n    browsers: [\"last 2 versions\"],\n    cascade: false\n  })).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(paths.styles.dest));\n};\n\nvar js = function js() {\n  return _gulp[\"default\"].src(paths.js.src).pipe((0, _gulpBrowserify[\"default\"])({\n    transform: [_babelify[\"default\"].configure({\n      presets: [\"@babel/preset-env\"]\n    })]\n  })).pipe(_gulp[\"default\"].dest(paths.js.dest));\n};\n\nvar watchFiles = function watchFiles() {\n  _gulp[\"default\"].watch(paths.styles.watch, styles);\n\n  _gulp[\"default\"].watch(paths.js.watch, js);\n};\n\nvar dev = _gulp[\"default\"].series(clean, styles, js, watchFiles);\n\nvar build = _gulp[\"default\"].series(clean, styles, js);\n\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJwYXRocyIsInN0eWxlcyIsInNyYyIsImRlc3QiLCJ3YXRjaCIsImpzIiwiY2xlYW4iLCJndWxwIiwicGlwZSIsImJyb3dzZXJzIiwiY2FzY2FkZSIsInRyYW5zZm9ybSIsImJhYmVsIiwiY29uZmlndXJlIiwicHJlc2V0cyIsIndhdGNoRmlsZXMiLCJkZXYiLCJzZXJpZXMiLCJidWlsZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUFBLHFCQUFLQyxRQUFMLEdBQWdCQyxPQUFPLENBQUMsV0FBRCxDQUF2QjtBQUVBLElBQU1DLEtBQUssR0FBRztBQUNaQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsR0FBRyxFQUFFLHlCQURDO0FBRU5DLElBQUFBLElBQUksRUFBRSxtQkFGQTtBQUdOQyxJQUFBQSxLQUFLLEVBQUU7QUFIRCxHQURJO0FBTVpDLEVBQUFBLEVBQUUsRUFBRTtBQUNGSCxJQUFBQSxHQUFHLEVBQUUsbUJBREg7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLGVBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFO0FBSEw7QUFOUSxDQUFkOztBQWFBLElBQU1FLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTSxxQkFBSSxDQUFDLFlBQUQsQ0FBSixDQUFOO0FBQUEsQ0FBZDs7QUFFQSxJQUFNTCxNQUFNLEdBQUcsU0FBVEEsTUFBUztBQUFBLFNBQ2JNLGlCQUNHTCxHQURILENBQ09GLEtBQUssQ0FBQ0MsTUFBTixDQUFhQyxHQURwQixFQUVHTSxJQUZILENBRVEsMkJBRlIsRUFHR0EsSUFISCxDQUlJLGtDQUFhO0FBQ1hDLElBQUFBLFFBQVEsRUFBRSxDQUFDLGlCQUFELENBREM7QUFFWEMsSUFBQUEsT0FBTyxFQUFFO0FBRkUsR0FBYixDQUpKLEVBU0dGLElBVEgsQ0FTUSwyQkFUUixFQVVHQSxJQVZILENBVVFELGlCQUFLSixJQUFMLENBQVVILEtBQUssQ0FBQ0MsTUFBTixDQUFhRSxJQUF2QixDQVZSLENBRGE7QUFBQSxDQUFmOztBQWFBLElBQU1FLEVBQUUsR0FBRyxTQUFMQSxFQUFLO0FBQUEsU0FDVEUsaUJBQ0dMLEdBREgsQ0FDT0YsS0FBSyxDQUFDSyxFQUFOLENBQVNILEdBRGhCLEVBRUdNLElBRkgsQ0FHSSxnQ0FBSTtBQUNGRyxJQUFBQSxTQUFTLEVBQUUsQ0FDVEMscUJBQU1DLFNBQU4sQ0FBZ0I7QUFDZEMsTUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFESyxLQUFoQixDQURTO0FBRFQsR0FBSixDQUhKLEVBV0dOLElBWEgsQ0FXUUQsaUJBQUtKLElBQUwsQ0FBVUgsS0FBSyxDQUFDSyxFQUFOLENBQVNGLElBQW5CLENBWFIsQ0FEUztBQUFBLENBQVg7O0FBY0EsSUFBTVksVUFBVSxHQUFHLFNBQWJBLFVBQWEsR0FBTTtBQUN2QlIsbUJBQUtILEtBQUwsQ0FBV0osS0FBSyxDQUFDQyxNQUFOLENBQWFHLEtBQXhCLEVBQStCSCxNQUEvQjs7QUFDQU0sbUJBQUtILEtBQUwsQ0FBV0osS0FBSyxDQUFDSyxFQUFOLENBQVNELEtBQXBCLEVBQTJCQyxFQUEzQjtBQUNELENBSEQ7O0FBS0EsSUFBTVcsR0FBRyxHQUFHVCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxNQUFuQixFQUEyQkksRUFBM0IsRUFBK0JVLFVBQS9CLENBQVo7O0FBRU8sSUFBTUcsS0FBSyxHQUFHWCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxNQUFuQixFQUEyQkksRUFBM0IsQ0FBZDs7O2VBRVFXLEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhY29yblxcRG9jdW1lbnRzXFxndWVzcy1NSU5FXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xyXG5pbXBvcnQgc2FzcyBmcm9tIFwiZ3VscC1zYXNzXCI7XHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImd1bHAtYXV0b3ByZWZpeGVyXCI7XHJcbmltcG9ydCBtaW5pZnlDU1MgZnJvbSBcImd1bHAtY3Nzb1wiO1xyXG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcclxuaW1wb3J0IGJybyBmcm9tIFwiZ3VscC1icm93c2VyaWZ5XCI7XHJcbmltcG9ydCBiYWJlbCBmcm9tIFwiYmFiZWxpZnlcIjtcclxuXHJcbnNhc3MuY29tcGlsZXIgPSByZXF1aXJlKFwibm9kZS1zYXNzXCIpO1xyXG5cclxuY29uc3QgcGF0aHMgPSB7XHJcbiAgc3R5bGVzOiB7XHJcbiAgICBzcmM6IFwiYXNzZXRzL3Njc3Mvc3R5bGVzLnNjc3NcIixcclxuICAgIGRlc3Q6IFwic3JjL3N0YXRpYy9zdHlsZXNcIixcclxuICAgIHdhdGNoOiBcImFzc2V0cy9zY3NzLyoqLyouc2Nzc1wiLFxyXG4gIH0sXHJcbiAganM6IHtcclxuICAgIHNyYzogXCJhc3NldHMvanMvbWFpbi5qc1wiLFxyXG4gICAgZGVzdDogXCJzcmMvc3RhdGljL2pzXCIsXHJcbiAgICB3YXRjaDogXCJhc3NldHMvanMvKiovKi5qc1wiLFxyXG4gIH0sXHJcbn07XHJcblxyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJzcmMvc3RhdGljXCJdKTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9ICgpID0+XHJcbiAgZ3VscFxyXG4gICAgLnNyYyhwYXRocy5zdHlsZXMuc3JjKVxyXG4gICAgLnBpcGUoc2FzcygpKVxyXG4gICAgLnBpcGUoXHJcbiAgICAgIGF1dG9wcmVmaXhlcih7XHJcbiAgICAgICAgYnJvd3NlcnM6IFtcImxhc3QgMiB2ZXJzaW9uc1wiXSxcclxuICAgICAgICBjYXNjYWRlOiBmYWxzZSxcclxuICAgICAgfSlcclxuICAgIClcclxuICAgIC5waXBlKG1pbmlmeUNTUygpKVxyXG4gICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnN0eWxlcy5kZXN0KSk7XHJcblxyXG5jb25zdCBqcyA9ICgpID0+XHJcbiAgZ3VscFxyXG4gICAgLnNyYyhwYXRocy5qcy5zcmMpXHJcbiAgICAucGlwZShcclxuICAgICAgYnJvKHtcclxuICAgICAgICB0cmFuc2Zvcm06IFtcclxuICAgICAgICAgIGJhYmVsLmNvbmZpZ3VyZSh7XHJcbiAgICAgICAgICAgIHByZXNldHM6IFtcIkBiYWJlbC9wcmVzZXQtZW52XCJdLFxyXG4gICAgICAgICAgfSksXHJcbiAgICAgICAgXSxcclxuICAgICAgfSlcclxuICAgIClcclxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5qcy5kZXN0KSk7XHJcblxyXG5jb25zdCB3YXRjaEZpbGVzID0gKCkgPT4ge1xyXG4gIGd1bHAud2F0Y2gocGF0aHMuc3R5bGVzLndhdGNoLCBzdHlsZXMpO1xyXG4gIGd1bHAud2F0Y2gocGF0aHMuanMud2F0Y2gsIGpzKTtcclxufTtcclxuXHJcbmNvbnN0IGRldiA9IGd1bHAuc2VyaWVzKGNsZWFuLCBzdHlsZXMsIGpzLCB3YXRjaEZpbGVzKTtcclxuXHJcbmV4cG9ydCBjb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKGNsZWFuLCBzdHlsZXMsIGpzKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRldjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "paths",
        "styles",
        "src",
        "dest",
        "watch",
        "js",
        "clean",
        "gulp",
        "pipe",
        "browsers",
        "cascade",
        "transform",
        "babel",
        "configure",
        "presets",
        "watchFiles",
        "dev",
        "series",
        "build"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,qBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,yBADC;AAENC,IAAAA,IAAI,EAAE,mBAFA;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADI;AAMZC,EAAAA,EAAE,EAAE;AACFH,IAAAA,GAAG,EAAE,mBADH;AAEFC,IAAAA,IAAI,EAAE,eAFJ;AAGFC,IAAAA,KAAK,EAAE;AAHL;AANQ,CAAd;;AAaA,IAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,YAAD,CAAJ,CAAN;AAAA,CAAd;;AAEA,IAAML,MAAM,GAAG,SAATA,MAAS;AAAA,SACbM,iBACGL,GADH,CACOF,KAAK,CAACC,MAAN,CAAaC,GADpB,EAEGM,IAFH,CAEQ,2BAFR,EAGGA,IAHH,CAII,kCAAa;AACXC,IAAAA,QAAQ,EAAE,CAAC,iBAAD,CADC;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAAb,CAJJ,EASGF,IATH,CASQ,2BATR,EAUGA,IAVH,CAUQD,iBAAKJ,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAVR,CADa;AAAA,CAAf;;AAaA,IAAME,EAAE,GAAG,SAALA,EAAK;AAAA,SACTE,iBACGL,GADH,CACOF,KAAK,CAACK,EAAN,CAASH,GADhB,EAEGM,IAFH,CAGI,gCAAI;AACFG,IAAAA,SAAS,EAAE,CACTC,qBAAMC,SAAN,CAAgB;AACdC,MAAAA,OAAO,EAAE,CAAC,mBAAD;AADK,KAAhB,CADS;AADT,GAAJ,CAHJ,EAWGN,IAXH,CAWQD,iBAAKJ,IAAL,CAAUH,KAAK,CAACK,EAAN,CAASF,IAAnB,CAXR,CADS;AAAA,CAAX;;AAcA,IAAMY,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBR,mBAAKH,KAAL,CAAWJ,KAAK,CAACC,MAAN,CAAaG,KAAxB,EAA+BH,MAA/B;;AACAM,mBAAKH,KAAL,CAAWJ,KAAK,CAACK,EAAN,CAASD,KAApB,EAA2BC,EAA3B;AACD,CAHD;;AAKA,IAAMW,GAAG,GAAGT,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,MAAnB,EAA2BI,EAA3B,EAA+BU,UAA/B,CAAZ;;AAEO,IAAMG,KAAK,GAAGX,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,MAAnB,EAA2BI,EAA3B,CAAd;;;eAEQW,G",
      "sourceRoot": "C:\\Users\\acorn\\Documents\\guess-MINE\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport sass from \"gulp-sass\";\r\nimport autoprefixer from \"gulp-autoprefixer\";\r\nimport minifyCSS from \"gulp-csso\";\r\nimport del from \"del\";\r\nimport bro from \"gulp-browserify\";\r\nimport babel from \"babelify\";\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\nconst paths = {\r\n  styles: {\r\n    src: \"assets/scss/styles.scss\",\r\n    dest: \"src/static/styles\",\r\n    watch: \"assets/scss/**/*.scss\",\r\n  },\r\n  js: {\r\n    src: \"assets/js/main.js\",\r\n    dest: \"src/static/js\",\r\n    watch: \"assets/js/**/*.js\",\r\n  },\r\n};\r\n\r\nconst clean = () => del([\"src/static\"]);\r\n\r\nconst styles = () =>\r\n  gulp\r\n    .src(paths.styles.src)\r\n    .pipe(sass())\r\n    .pipe(\r\n      autoprefixer({\r\n        browsers: [\"last 2 versions\"],\r\n        cascade: false,\r\n      })\r\n    )\r\n    .pipe(minifyCSS())\r\n    .pipe(gulp.dest(paths.styles.dest));\r\n\r\nconst js = () =>\r\n  gulp\r\n    .src(paths.js.src)\r\n    .pipe(\r\n      bro({\r\n        transform: [\r\n          babel.configure({\r\n            presets: [\"@babel/preset-env\"],\r\n          }),\r\n        ],\r\n      })\r\n    )\r\n    .pipe(gulp.dest(paths.js.dest));\r\n\r\nconst watchFiles = () => {\r\n  gulp.watch(paths.styles.watch, styles);\r\n  gulp.watch(paths.js.watch, js);\r\n};\r\n\r\nconst dev = gulp.series(clean, styles, js, watchFiles);\r\n\r\nexport const build = gulp.series(clean, styles, js);\r\n\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590366326068
  },
  "{\"sourceRoot\":\"c:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"c:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"filename\":\"c:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"c:\\\\Users\\\\acorn\\\\Documents\\\\guess-MINE\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "c:\\Users\\acorn\\Documents\\guess-MINE\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "c:\\Users\\acorn\\Documents\\guess-MINE",
      "filename": "c:\\Users\\acorn\\Documents\\guess-MINE\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "c:\\Users\\acorn\\Documents\\guess-MINE",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "c:\\Users\\acorn\\Documents\\guess-MINE\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "c:\\Users\\acorn\\Documents\\guess-MINE\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "c:\\Users\\acorn\\Documents\\guess-MINE\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpBrowserify = _interopRequireDefault(require(\"gulp-browserify\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar paths = {\n  styles: {\n    src: \"assets/scss/styles.scss\",\n    dest: \"src/static/styles\",\n    watch: \"assets/scss/**/*.scss\"\n  },\n  js: {\n    src: \"assets/js/main.js\",\n    dest: \"src/static/js\",\n    watch: \"assets/js/**/*.js\"\n  }\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"src/static\"]);\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpSass[\"default\"])()).pipe((0, _gulpAutoprefixer[\"default\"])({\n    browsers: [\"last 2 versions\"],\n    cascade: false\n  })).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(paths.styles.dest));\n};\n\nvar js = function js() {\n  return _gulp[\"default\"].src(paths.js.src).pipe((0, _gulpBrowserify[\"default\"])({\n    transform: [_babelify[\"default\"].configure({\n      presets: [\"@babel/preset-env\"]\n    })]\n  })).pipe(_gulp[\"default\"].dest(paths.js.dest));\n};\n\nvar watchFiles = function watchFiles() {\n  _gulp[\"default\"].watch(paths.styles.watch, styles);\n\n  _gulp[\"default\"].watch(paths.js.watch, js);\n};\n\nvar dev = _gulp[\"default\"].series(clean, styles, js, watchFiles);\n\nvar build = _gulp[\"default\"].series(clean, styles, js);\n\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJwYXRocyIsInN0eWxlcyIsInNyYyIsImRlc3QiLCJ3YXRjaCIsImpzIiwiY2xlYW4iLCJndWxwIiwicGlwZSIsImJyb3dzZXJzIiwiY2FzY2FkZSIsInRyYW5zZm9ybSIsImJhYmVsIiwiY29uZmlndXJlIiwicHJlc2V0cyIsIndhdGNoRmlsZXMiLCJkZXYiLCJzZXJpZXMiLCJidWlsZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUFBLHFCQUFLQyxRQUFMLEdBQWdCQyxPQUFPLENBQUMsV0FBRCxDQUF2QjtBQUVBLElBQU1DLEtBQUssR0FBRztBQUNaQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsR0FBRyxFQUFFLHlCQURDO0FBRU5DLElBQUFBLElBQUksRUFBRSxtQkFGQTtBQUdOQyxJQUFBQSxLQUFLLEVBQUU7QUFIRCxHQURJO0FBTVpDLEVBQUFBLEVBQUUsRUFBRTtBQUNGSCxJQUFBQSxHQUFHLEVBQUUsbUJBREg7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLGVBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFO0FBSEw7QUFOUSxDQUFkOztBQWFBLElBQU1FLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTSxxQkFBSSxDQUFDLFlBQUQsQ0FBSixDQUFOO0FBQUEsQ0FBZDs7QUFFQSxJQUFNTCxNQUFNLEdBQUcsU0FBVEEsTUFBUztBQUFBLFNBQ2JNLGlCQUNHTCxHQURILENBQ09GLEtBQUssQ0FBQ0MsTUFBTixDQUFhQyxHQURwQixFQUVHTSxJQUZILENBRVEsMkJBRlIsRUFHR0EsSUFISCxDQUlJLGtDQUFhO0FBQ1hDLElBQUFBLFFBQVEsRUFBRSxDQUFDLGlCQUFELENBREM7QUFFWEMsSUFBQUEsT0FBTyxFQUFFO0FBRkUsR0FBYixDQUpKLEVBU0dGLElBVEgsQ0FTUSwyQkFUUixFQVVHQSxJQVZILENBVVFELGlCQUFLSixJQUFMLENBQVVILEtBQUssQ0FBQ0MsTUFBTixDQUFhRSxJQUF2QixDQVZSLENBRGE7QUFBQSxDQUFmOztBQWFBLElBQU1FLEVBQUUsR0FBRyxTQUFMQSxFQUFLO0FBQUEsU0FDVEUsaUJBQ0dMLEdBREgsQ0FDT0YsS0FBSyxDQUFDSyxFQUFOLENBQVNILEdBRGhCLEVBRUdNLElBRkgsQ0FHSSxnQ0FBSTtBQUNGRyxJQUFBQSxTQUFTLEVBQUUsQ0FDVEMscUJBQU1DLFNBQU4sQ0FBZ0I7QUFDZEMsTUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFESyxLQUFoQixDQURTO0FBRFQsR0FBSixDQUhKLEVBV0dOLElBWEgsQ0FXUUQsaUJBQUtKLElBQUwsQ0FBVUgsS0FBSyxDQUFDSyxFQUFOLENBQVNGLElBQW5CLENBWFIsQ0FEUztBQUFBLENBQVg7O0FBY0EsSUFBTVksVUFBVSxHQUFHLFNBQWJBLFVBQWEsR0FBTTtBQUN2QlIsbUJBQUtILEtBQUwsQ0FBV0osS0FBSyxDQUFDQyxNQUFOLENBQWFHLEtBQXhCLEVBQStCSCxNQUEvQjs7QUFDQU0sbUJBQUtILEtBQUwsQ0FBV0osS0FBSyxDQUFDSyxFQUFOLENBQVNELEtBQXBCLEVBQTJCQyxFQUEzQjtBQUNELENBSEQ7O0FBS0EsSUFBTVcsR0FBRyxHQUFHVCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxNQUFuQixFQUEyQkksRUFBM0IsRUFBK0JVLFVBQS9CLENBQVo7O0FBRU8sSUFBTUcsS0FBSyxHQUFHWCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxNQUFuQixFQUEyQkksRUFBM0IsQ0FBZDs7O2VBRVFXLEciLCJzb3VyY2VSb290IjoiYzpcXFVzZXJzXFxhY29yblxcRG9jdW1lbnRzXFxndWVzcy1NSU5FXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xyXG5pbXBvcnQgc2FzcyBmcm9tIFwiZ3VscC1zYXNzXCI7XHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImd1bHAtYXV0b3ByZWZpeGVyXCI7XHJcbmltcG9ydCBtaW5pZnlDU1MgZnJvbSBcImd1bHAtY3Nzb1wiO1xyXG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcclxuaW1wb3J0IGJybyBmcm9tIFwiZ3VscC1icm93c2VyaWZ5XCI7XHJcbmltcG9ydCBiYWJlbCBmcm9tIFwiYmFiZWxpZnlcIjtcclxuXHJcbnNhc3MuY29tcGlsZXIgPSByZXF1aXJlKFwibm9kZS1zYXNzXCIpO1xyXG5cclxuY29uc3QgcGF0aHMgPSB7XHJcbiAgc3R5bGVzOiB7XHJcbiAgICBzcmM6IFwiYXNzZXRzL3Njc3Mvc3R5bGVzLnNjc3NcIixcclxuICAgIGRlc3Q6IFwic3JjL3N0YXRpYy9zdHlsZXNcIixcclxuICAgIHdhdGNoOiBcImFzc2V0cy9zY3NzLyoqLyouc2Nzc1wiLFxyXG4gIH0sXHJcbiAganM6IHtcclxuICAgIHNyYzogXCJhc3NldHMvanMvbWFpbi5qc1wiLFxyXG4gICAgZGVzdDogXCJzcmMvc3RhdGljL2pzXCIsXHJcbiAgICB3YXRjaDogXCJhc3NldHMvanMvKiovKi5qc1wiLFxyXG4gIH0sXHJcbn07XHJcblxyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJzcmMvc3RhdGljXCJdKTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9ICgpID0+XHJcbiAgZ3VscFxyXG4gICAgLnNyYyhwYXRocy5zdHlsZXMuc3JjKVxyXG4gICAgLnBpcGUoc2FzcygpKVxyXG4gICAgLnBpcGUoXHJcbiAgICAgIGF1dG9wcmVmaXhlcih7XHJcbiAgICAgICAgYnJvd3NlcnM6IFtcImxhc3QgMiB2ZXJzaW9uc1wiXSxcclxuICAgICAgICBjYXNjYWRlOiBmYWxzZSxcclxuICAgICAgfSlcclxuICAgIClcclxuICAgIC5waXBlKG1pbmlmeUNTUygpKVxyXG4gICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnN0eWxlcy5kZXN0KSk7XHJcblxyXG5jb25zdCBqcyA9ICgpID0+XHJcbiAgZ3VscFxyXG4gICAgLnNyYyhwYXRocy5qcy5zcmMpXHJcbiAgICAucGlwZShcclxuICAgICAgYnJvKHtcclxuICAgICAgICB0cmFuc2Zvcm06IFtcclxuICAgICAgICAgIGJhYmVsLmNvbmZpZ3VyZSh7XHJcbiAgICAgICAgICAgIHByZXNldHM6IFtcIkBiYWJlbC9wcmVzZXQtZW52XCJdLFxyXG4gICAgICAgICAgfSksXHJcbiAgICAgICAgXSxcclxuICAgICAgfSlcclxuICAgIClcclxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5qcy5kZXN0KSk7XHJcblxyXG5jb25zdCB3YXRjaEZpbGVzID0gKCkgPT4ge1xyXG4gIGd1bHAud2F0Y2gocGF0aHMuc3R5bGVzLndhdGNoLCBzdHlsZXMpO1xyXG4gIGd1bHAud2F0Y2gocGF0aHMuanMud2F0Y2gsIGpzKTtcclxufTtcclxuXHJcbmNvbnN0IGRldiA9IGd1bHAuc2VyaWVzKGNsZWFuLCBzdHlsZXMsIGpzLCB3YXRjaEZpbGVzKTtcclxuXHJcbmV4cG9ydCBjb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKGNsZWFuLCBzdHlsZXMsIGpzKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRldjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "paths",
        "styles",
        "src",
        "dest",
        "watch",
        "js",
        "clean",
        "gulp",
        "pipe",
        "browsers",
        "cascade",
        "transform",
        "babel",
        "configure",
        "presets",
        "watchFiles",
        "dev",
        "series",
        "build"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,qBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,yBADC;AAENC,IAAAA,IAAI,EAAE,mBAFA;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADI;AAMZC,EAAAA,EAAE,EAAE;AACFH,IAAAA,GAAG,EAAE,mBADH;AAEFC,IAAAA,IAAI,EAAE,eAFJ;AAGFC,IAAAA,KAAK,EAAE;AAHL;AANQ,CAAd;;AAaA,IAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,YAAD,CAAJ,CAAN;AAAA,CAAd;;AAEA,IAAML,MAAM,GAAG,SAATA,MAAS;AAAA,SACbM,iBACGL,GADH,CACOF,KAAK,CAACC,MAAN,CAAaC,GADpB,EAEGM,IAFH,CAEQ,2BAFR,EAGGA,IAHH,CAII,kCAAa;AACXC,IAAAA,QAAQ,EAAE,CAAC,iBAAD,CADC;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAAb,CAJJ,EASGF,IATH,CASQ,2BATR,EAUGA,IAVH,CAUQD,iBAAKJ,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAVR,CADa;AAAA,CAAf;;AAaA,IAAME,EAAE,GAAG,SAALA,EAAK;AAAA,SACTE,iBACGL,GADH,CACOF,KAAK,CAACK,EAAN,CAASH,GADhB,EAEGM,IAFH,CAGI,gCAAI;AACFG,IAAAA,SAAS,EAAE,CACTC,qBAAMC,SAAN,CAAgB;AACdC,MAAAA,OAAO,EAAE,CAAC,mBAAD;AADK,KAAhB,CADS;AADT,GAAJ,CAHJ,EAWGN,IAXH,CAWQD,iBAAKJ,IAAL,CAAUH,KAAK,CAACK,EAAN,CAASF,IAAnB,CAXR,CADS;AAAA,CAAX;;AAcA,IAAMY,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBR,mBAAKH,KAAL,CAAWJ,KAAK,CAACC,MAAN,CAAaG,KAAxB,EAA+BH,MAA/B;;AACAM,mBAAKH,KAAL,CAAWJ,KAAK,CAACK,EAAN,CAASD,KAApB,EAA2BC,EAA3B;AACD,CAHD;;AAKA,IAAMW,GAAG,GAAGT,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,MAAnB,EAA2BI,EAA3B,EAA+BU,UAA/B,CAAZ;;AAEO,IAAMG,KAAK,GAAGX,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,MAAnB,EAA2BI,EAA3B,CAAd;;;eAEQW,G",
      "sourceRoot": "c:\\Users\\acorn\\Documents\\guess-MINE\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport sass from \"gulp-sass\";\r\nimport autoprefixer from \"gulp-autoprefixer\";\r\nimport minifyCSS from \"gulp-csso\";\r\nimport del from \"del\";\r\nimport bro from \"gulp-browserify\";\r\nimport babel from \"babelify\";\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\nconst paths = {\r\n  styles: {\r\n    src: \"assets/scss/styles.scss\",\r\n    dest: \"src/static/styles\",\r\n    watch: \"assets/scss/**/*.scss\",\r\n  },\r\n  js: {\r\n    src: \"assets/js/main.js\",\r\n    dest: \"src/static/js\",\r\n    watch: \"assets/js/**/*.js\",\r\n  },\r\n};\r\n\r\nconst clean = () => del([\"src/static\"]);\r\n\r\nconst styles = () =>\r\n  gulp\r\n    .src(paths.styles.src)\r\n    .pipe(sass())\r\n    .pipe(\r\n      autoprefixer({\r\n        browsers: [\"last 2 versions\"],\r\n        cascade: false,\r\n      })\r\n    )\r\n    .pipe(minifyCSS())\r\n    .pipe(gulp.dest(paths.styles.dest));\r\n\r\nconst js = () =>\r\n  gulp\r\n    .src(paths.js.src)\r\n    .pipe(\r\n      bro({\r\n        transform: [\r\n          babel.configure({\r\n            presets: [\"@babel/preset-env\"],\r\n          }),\r\n        ],\r\n      })\r\n    )\r\n    .pipe(gulp.dest(paths.js.dest));\r\n\r\nconst watchFiles = () => {\r\n  gulp.watch(paths.styles.watch, styles);\r\n  gulp.watch(paths.js.watch, js);\r\n};\r\n\r\nconst dev = gulp.series(clean, styles, js, watchFiles);\r\n\r\nexport const build = gulp.series(clean, styles, js);\r\n\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590366326068
  }
}